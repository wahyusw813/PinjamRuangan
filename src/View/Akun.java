/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;


import Model.MahasiswaModel;
import Controller.RuanganController;
import Model.Mahasiswa;
import Model.Ruangan;
import Model.Session;
import Model.KoneksiDB;
import java.io.IOException;

import java.sql.Connection;
import javax.swing.JScrollPane;
import javax.swing.JOptionPane;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Wahyu
 */
public class Akun extends javax.swing.JPanel {
    private JScrollPane contentScrollPane;
    private final Connection connection;
    private final MahasiswaModel mahasiswaController;
    private final RuanganController ruanganController;
    private boolean isEditing = false;
    private int selectedRow = -1;
    
    /**
     * Creates new form akun
     * @param contentScrollPane
     */
    public Akun(JScrollPane contentScrollPane) {
        this.contentScrollPane = contentScrollPane;
        this.connection = KoneksiDB.getConnection(); // Koneksi ke database
        initComponents();
        mahasiswaController = new MahasiswaModel(this);
        ruanganController = new RuanganController();
        jLabelUser.setText("Logged in as: " + Session.getEmail());
        loadMahasiswaData();
        loadRuanganData();
    }
    
    private void loadMahasiswaData() {
        Mahasiswa mahasiswa = mahasiswaController.getCurrentMahasiswa();
        if (mahasiswa != null) {
            nimTextField.setText(mahasiswa.getNim());
            namaTextField.setText(mahasiswa.getNama());
            passwordField.setText(mahasiswa.getPassword());
            setFieldsEditable(false);
        }
    }
    private void loadRuanganData() {
        int mahasiswaId = mahasiswaController.getCurrentMahasiswa().getId();
    List<Ruangan> ruanganList = ruanganController.getRuanganByMahasiswaId(mahasiswaId);

    DefaultTableModel model = (DefaultTableModel) tableRuangan.getModel();
    model.setRowCount(0); // Clear existing data

    for (Ruangan ruangan : ruanganList) {
        Object[] row = {
            ruangan.getId_ruang(), // Add id_ruang here
            ruangan.getRuang(),
            ruangan.getTanggal(),
            ruangan.getSesi1(),
            ruangan.getSesi2(),
            ruangan.getSesi3(),
            ruangan.getSesi4()
        };
        model.addRow(row);
    }

    // Hide the id column (first column)
    tableRuangan.getColumnModel().getColumn(0).setMinWidth(0);
    tableRuangan.getColumnModel().getColumn(0).setMaxWidth(0);
    tableRuangan.getColumnModel().getColumn(0).setWidth(0);
    }
    private void setFieldsEditable(boolean editable) {
        nimTextField.setEditable(editable);
        namaTextField.setEditable(editable);
        passwordField.setEditable(editable);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabelUser = new javax.swing.JLabel();
        nimTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namaTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableRuangan = new javax.swing.JTable();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        passwordField = new javax.swing.JPasswordField();
        exportButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 255, 255));
        jLabel1.setText("Akun");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, -1, -1));

        jLabelUser.setForeground(new java.awt.Color(204, 255, 255));
        jLabelUser.setText("Akun");
        add(jLabelUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 290, -1));

        nimTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nimTextFieldActionPerformed(evt);
            }
        });
        add(nimTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 187, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 255, 255));
        jLabel3.setText("NIM");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 110, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 255, 255));
        jLabel4.setText("Nama");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        namaTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaTextFieldActionPerformed(evt);
            }
        });
        add(namaTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 187, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 255, 255));
        jLabel5.setText("Password");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(204, 255, 255));
        jLabel6.setText("List Ruangan yang Dipinjam");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 90, -1, -1));

        tableRuangan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "id", "Ruang", "Tanggal", "Sesi 1", "Sesi 2", "Sesi 3", "Sesi 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableRuangan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableRuanganMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableRuangan);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 125, 423, 260));

        editButton.setBackground(new java.awt.Color(102, 153, 255));
        editButton.setForeground(new java.awt.Color(0, 51, 153));
        editButton.setText("Edit Profile");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });
        add(editButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 350, -1, -1));

        deleteButton.setBackground(new java.awt.Color(102, 153, 255));
        deleteButton.setForeground(new java.awt.Color(0, 51, 153));
        deleteButton.setText("Hapus Pinjaman");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 410, -1, -1));

        passwordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordFieldActionPerformed(evt);
            }
        });
        add(passwordField, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 187, -1));

        exportButton.setBackground(new java.awt.Color(102, 153, 255));
        exportButton.setForeground(new java.awt.Color(0, 51, 153));
        exportButton.setText("Export Bukti");
        exportButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportButtonActionPerformed(evt);
            }
        });
        add(exportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 410, -1, -1));

        jLabel2.setForeground(new java.awt.Color(204, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Plain.png"))); // NOI18N
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -30, 680, 530));
    }// </editor-fold>//GEN-END:initComponents

    private void nimTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nimTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nimTextFieldActionPerformed

    private void namaTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_namaTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_namaTextFieldActionPerformed

    private void passwordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordFieldActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        if (isEditing) {
            int response = JOptionPane.showConfirmDialog(this, "Do you want to save changes?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                Mahasiswa mahasiswa = new Mahasiswa(
                    0, // id is not needed for update
                    Session.getEmail(),
                    nimTextField.getText(),
                    namaTextField.getText(),
                    new String(passwordField.getPassword())
                );
                boolean updated = mahasiswaController.updateMahasiswa(mahasiswa);
                if (updated) {
                    JOptionPane.showMessageDialog(this, "User updated successfully.");
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to update user.");
                }
            }
            setFieldsEditable(false);
            editButton.setText("Edit");
        } else {
            setFieldsEditable(true);
            editButton.setText("Save");
        }
        isEditing = !isEditing;
    }//GEN-LAST:event_editButtonActionPerformed

    private void exportButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = tableRuangan.getSelectedRow();
        if (selectedRow != -1) {
            // Dapatkan data dari tabel
            String id_ruang = tableRuangan.getValueAt(selectedRow, 0).toString();
            String ruang = tableRuangan.getValueAt(selectedRow, 1).toString();
            String tanggal = tableRuangan.getValueAt(selectedRow, 2).toString();
            String sesi1 = tableRuangan.getValueAt(selectedRow, 3).toString();
            String sesi2 = tableRuangan.getValueAt(selectedRow, 4).toString();
            String sesi3 = tableRuangan.getValueAt(selectedRow, 5).toString();
            String sesi4 = tableRuangan.getValueAt(selectedRow, 6).toString();

            // Buat instance RuanganController
            RuanganController ruanganController = new RuanganController();

                try {
                    // Panggil method untuk ekspor PDF
                    ruanganController.exportToPdf(id_ruang, ruang, tanggal, sesi1, sesi2, sesi3, sesi4);
                } catch (IOException ex) {
                    Logger.getLogger(Akun.class.getName()).log(Level.SEVERE, null, ex);
                }
        } else {
            JOptionPane.showMessageDialog(this, "Pilih satu baris terlebih dahulu.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_exportButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        if (selectedRow != -1) {
            int response = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this entry?", "Confirm", JOptionPane.YES_NO_OPTION);
            if (response == JOptionPane.YES_OPTION) {
                DefaultTableModel model = (DefaultTableModel) tableRuangan.getModel();
                String ruang = (String) model.getValueAt(selectedRow, 0);
                java.sql.Date tanggal = (java.sql.Date) model.getValueAt(selectedRow, 1);

                boolean deleted = ruanganController.deleteRuangan(ruang, tanggal);
                if (deleted) {
                    model.removeRow(selectedRow);
                    JOptionPane.showMessageDialog(this, "Entry deleted successfully.");
                    selectedRow = -1; // Reset selected row
                } else {
                    JOptionPane.showMessageDialog(this, "Failed to delete entry.");
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please select a row first.");
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void tableRuanganMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableRuanganMouseClicked
        // TODO add your handling code here:
        selectedRow = tableRuangan.getSelectedRow();
        
    }//GEN-LAST:event_tableRuanganMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JButton exportButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namaTextField;
    private javax.swing.JTextField nimTextField;
    private javax.swing.JPasswordField passwordField;
    private javax.swing.JTable tableRuangan;
    // End of variables declaration//GEN-END:variables
}
